
package view;
import javax.swing.JOptionPane;
import model.Tarefa;
import dao.DAOTarefa;
import java.awt.Component;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.text.DateFormatter;
import util.ConvesorData;



public class ViewPesquisar extends javax.swing.JFrame {
    DAOTarefa dAOTarefa =  new DAOTarefa();
 Tarefa tarefa = new Tarefa ();
    ArrayList<Tarefa>lista = dAOTarefa.listarTarefaDAO();
    String cadAlt = "Cad";
    String dataPeriodo;
 
    public ViewPesquisar() {
        initComponents();
        setLocationRelativeTo(this);
       atualizarTarefa();
       preencherComboDatas();
       jRBPorData.setSelected(true); //Iniciar Rádio button
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btGPorPeriodo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jCBDatas = new javax.swing.JComboBox<>();
        jRBPorData = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jDCInicio = new com.toedter.calendar.JDateChooser();
        jDCFim = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jRBPorPeriodo = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        JbtLimpar2 = new javax.swing.JButton();
        jBtPesquisarTarefa = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTbtabela = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jTFtarefa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTFdescricao = new javax.swing.JTextField();
        jDateCData = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTFHoraFim = new javax.swing.JFormattedTextField();
        jTFhorainicio = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jTfId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jCBStatusp = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jBtAtualizar = new javax.swing.JButton();
        jbtLimpar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jBtVoltar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowFechar(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 102, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PESQUISAR TAREFA");

        jPanel2.setBackground(new java.awt.Color(255, 153, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Por data:"));

        jCBDatas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jCBDatas.setEnabled(false);

        btGPorPeriodo.add(jRBPorData);
        jRBPorData.setText("Data:");
        jRBPorData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPorData(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jRBPorData)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jCBDatas, 0, 274, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jRBPorData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBDatas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Linha do Tempo"));

        jDCInicio.setDateFormatString("dd '/' MM '/' y");
        jDCInicio.setEnabled(false);

        jDCFim.setDateFormatString("dd '/' MM '/' y");
        jDCFim.setEnabled(false);

        jLabel9.setText("Dta Fim:");

        btGPorPeriodo.add(jRBPorPeriodo);
        jRBPorPeriodo.setText("Dta Início:");
        jRBPorPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPorPeriodo(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDCInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRBPorPeriodo))
                .addGap(85, 85, 85)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jDCFim, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBPorPeriodo)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDCFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDCInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar"));

        JbtLimpar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-clean-24.png"))); // NOI18N
        JbtLimpar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionClean(evt);
            }
        });

        jBtPesquisarTarefa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-search-in-cloud-24.png"))); // NOI18N
        jBtPesquisarTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionPesquisarTarefa(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBtPesquisarTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                    .addComponent(JbtLimpar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtPesquisarTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JbtLimpar2)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 153, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tarefas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jTbtabela.setBackground(new java.awt.Color(204, 204, 204));
        jTbtabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Tarefa", "Descrição", "Data:", "Inicio.H:", "Termi.H:", "Status:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTbtabela);
        if (jTbtabela.getColumnModel().getColumnCount() > 0) {
            jTbtabela.getColumnModel().getColumn(0).setResizable(false);
            jTbtabela.getColumnModel().getColumn(1).setResizable(false);
            jTbtabela.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTbtabela.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTbtabela.getColumnModel().getColumn(3).setResizable(false);
            jTbtabela.getColumnModel().getColumn(4).setResizable(false);
            jTbtabela.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTbtabela.getColumnModel().getColumn(5).setResizable(false);
            jTbtabela.getColumnModel().getColumn(5).setPreferredWidth(70);
            jTbtabela.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 153, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar Tarefa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(51, 0, 51))); // NOI18N

        jTFtarefa.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Tarefa:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Descrição:");

        jTFdescricao.setEnabled(false);

        jDateCData.setDateFormatString("d '/' MM '/' y");
        jDateCData.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 51));
        jLabel6.setText("Data:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 51));
        jLabel7.setText("Hora Inicio:");

        try {
            jTFHoraFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTFHoraFim.setEnabled(false);

        try {
            jTFhorainicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTFhorainicio.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 51));
        jLabel8.setText("Hora Final:");

        jTfId.setEditable(false);
        jTfId.setEnabled(false);
        jTfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTfIdActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 51));
        jLabel5.setText("ID:");

        jCBStatusp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "PENDENTE", "EM ANDAMENTO", "CONCLUÍDA" }));
        jCBStatusp.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Status:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jTFtarefa, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateCData, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jLabel5)
                                .addGap(44, 44, 44)
                                .addComponent(jTfId, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCBStatusp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTFHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFhorainicio, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(129, 129, 129))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFdescricao)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jTFtarefa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jTFHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jCBStatusp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateCData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTFhorainicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTFdescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 153, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ferramentas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jBtAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-update-24.png"))); // NOI18N
        jBtAtualizar.setToolTipText("Atualizar Tarefa");
        jBtAtualizar.setEnabled(false);
        jBtAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionAdd(evt);
            }
        });

        jbtLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-clean-24.png"))); // NOI18N
        jbtLimpar.setToolTipText("Limpar");
        jbtLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLimparActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-edit-24.png"))); // NOI18N
        jButton4.setToolTipText("Editar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionEditar(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-erase-24.png"))); // NOI18N
        jButton1.setToolTipText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionExcluirTarefa(evt);
            }
        });

        jBtVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-back-24.png"))); // NOI18N
        jBtVoltar.setToolTipText("Voltar");
        jBtVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionVoltar(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtVoltar)
                .addGap(18, 18, 18)
                .addComponent(jBtAtualizar)
                .addGap(18, 18, 18)
                .addComponent(jbtLimpar)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/av.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actionAdd(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionAdd
        salvarTarefas();
        limparCampos();
    }//GEN-LAST:event_actionAdd

    private void jbtLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLimparActionPerformed
       limparCampos();
    }//GEN-LAST:event_jbtLimparActionPerformed

    private void actionEditar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionEditar
         editarTarefa();
    }//GEN-LAST:event_actionEditar

    private void actionVoltar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionVoltar
      exit();
        
    }//GEN-LAST:event_actionVoltar

    private void actionExcluirTarefa(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionExcluirTarefa
      UIManager.put("OptionPane.yesButtonText", "Sim");
      UIManager.put("OptionPane.noButtonText", "Não");
      
       int op = JOptionPane.showConfirmDialog(null, "Você confirmar a exclusão?", "Atenção", JOptionPane.YES_NO_OPTION);   
       
        if (op == 0){
        
          excluirTarefa();
        }
       
      
    }//GEN-LAST:event_actionExcluirTarefa

    private void actionPorData(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPorData
        jCBDatas.setEnabled(true);
        jDCInicio.setEnabled(false);
        jDCInicio.setDate(null);
        jDCFim.setEnabled(false);
        jDCFim.setDate(null);
       // jCBStatusp.setEnabled(false);
    }//GEN-LAST:event_actionPorData

    private void actionPorPeriodo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPorPeriodo
        jDCInicio.setEnabled(true);
        jDCFim.setEnabled(true);
        jCBDatas.setEnabled(false);
        jCBDatas.setSelectedIndex(0);
       // jCBStatusp.setEnabled(true);
      
    }//GEN-LAST:event_actionPorPeriodo

    private void actionPesquisarTarefa(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionPesquisarTarefa
      PesquisarTarefa();
    }//GEN-LAST:event_actionPesquisarTarefa

    private void actionClean(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionClean
         limparCampos();
    }//GEN-LAST:event_actionClean

    private void jTfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTfIdActionPerformed

    private void windowFechar(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowFechar
      UIManager.put("OptionPane.yesButtonText", "Sim");
      UIManager.put("OptionPane.noButtonText", "Não");
      
       int op = JOptionPane.showConfirmDialog(null, "Você desejar encerrar a sua sessão?", "Atenção", JOptionPane.YES_NO_OPTION);
       
        if (op == 0){
        
         this.dispose();
        }
    }//GEN-LAST:event_windowFechar

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPesquisar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JbtLimpar2;
    private javax.swing.ButtonGroup btGPorPeriodo;
    private javax.swing.JButton jBtAtualizar;
    private javax.swing.JButton jBtPesquisarTarefa;
    private javax.swing.JButton jBtVoltar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jCBDatas;
    private javax.swing.JComboBox<String> jCBStatusp;
    private com.toedter.calendar.JDateChooser jDCFim;
    private com.toedter.calendar.JDateChooser jDCInicio;
    private com.toedter.calendar.JDateChooser jDateCData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRBPorData;
    private javax.swing.JRadioButton jRBPorPeriodo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jTFHoraFim;
    private javax.swing.JTextField jTFdescricao;
    private javax.swing.JFormattedTextField jTFhorainicio;
    private javax.swing.JTextField jTFtarefa;
    private javax.swing.JTable jTbtabela;
    private javax.swing.JTextField jTfId;
    private javax.swing.JButton jbtLimpar;
    // End of variables declaration//GEN-END:variables

    private void salvarTarefas() {  
        DateTimeFormatter formatadorHora = DateTimeFormatter.ofPattern("HH:mm");
        
        Date dataSelecionada = jDateCData.getDate();
        String horaInicioTexto = jTFhorainicio.getText();
        String horaFimTexto = jTFHoraFim.getText();
        
        LocalTime horaInicio;
        LocalTime horaFim;
        
        try {
        horaInicio = LocalTime.parse(horaInicioTexto, formatadorHora);
        horaFim = LocalTime.parse(horaFimTexto, formatadorHora);
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(this,"Hora inválida! use o formato HH:mm ", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
       
     
       // tarefa = new Tarefa();
        DAOTarefa dao = new DAOTarefa();
        Date dateSelecionado = jDateCData.getDate();
        
        tarefa.setTarefa(jTFtarefa.getText());
        tarefa.setDescricao(jTFdescricao.getText());
        tarefa.setDataTarefa(ConvesorData.converterDateParaLocalDate(dateSelecionado));
        tarefa.setHorainicio(LocalTime.parse(jTFhorainicio.getText()));
        tarefa.setHoraFim (LocalTime.parse(jTFHoraFim.getText()));
        tarefa.setStatus(String.valueOf(jCBStatusp.getSelectedItem()));
        
        if(horaFim.isBefore(horaInicio) || horaFim.equals(horaInicio))
        {  
        JOptionPane.showConfirmDialog(null, "Hora fim não pode ser menor ou igual á hora inicio", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
        
        }
        
        if (jTFtarefa.getText() == null || jTFtarefa.getText().trim().equals("")|| 
            jTFdescricao.getText() == null || jTFdescricao.getText().trim().equals("")||
            jDateCData.getDate() == null ||  jCBStatusp.getSelectedItem() == "") {
            
            JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        
            tarefa.setId(Integer.parseInt(jTfId.getText()));
            if (dAOTarefa.editarTArefaDAO(tarefa)) {
                JOptionPane.showMessageDialog(null, "Tarefa Atualizada com Sucesso!", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
            limparCampos();
            atualizarTarefa();
             desabilitarCampos();
              
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao Atualizar", "Erro", JOptionPane.ERROR_MESSAGE);
            }
           
       
       
        
    }
  
    

    private void limparCampos() {
        jTfId.setText("");
        jDateCData.setDate(null);
        jTFtarefa.setText("");
        jTFdescricao.setText("");
        jTFhorainicio.setText("");
        jTFHoraFim.setText("");
        jDCInicio.setDate(null);
        jDCFim.setDate(null);
        jDCInicio.setEnabled(false);
        jDCFim.setEnabled(false);
        btGPorPeriodo.clearSelection();
        jCBDatas.setSelectedIndex(0);
        jCBDatas.setEnabled(false);
        jRBPorData.setSelected(true);
        jCBStatusp.setSelectedIndex(0);
        
        
    }

    private void atualizarTarefa() {
         DAOTarefa dao = new DAOTarefa();
        lista = dao.listarTarefaDAO();
        
        DefaultTableModel model = (DefaultTableModel) jTbtabela.getModel();
        model.setRowCount(0);
       
        for (Tarefa t : lista) {
            model.addRow(new Object[]{
                t.getId(),
                t.getTarefa(),
                t.getDescricao(),
                t.getDataTarefa(),
                t.getHorainicio(),
                t.getHoraFim(),
                t.getStatus()
                    
              
            });
            
            aplicarFormantoDataBR(jTbtabela, 3);
           
        }
        
        
    }


    private void editarTarefa() {
       cadAlt = "Alt";
       int linha = jTbtabela.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Você deve selecionar um registro", "Erro", JOptionPane.ERROR_MESSAGE);
           
        } else {
            habilitarCampos();
            int id = (int) jTbtabela.getValueAt(linha, 0);
            String titulo = (String)jTbtabela.getValueAt(linha, 1);
            String descricao = (String)jTbtabela.getValueAt(linha, 2);
            LocalDate dtTarefa = (LocalDate) jTbtabela.getValueAt(linha, 3);
            LocalTime hInicio = (LocalTime) jTbtabela.getValueAt(linha, 4);
            LocalTime hFim = (LocalTime) jTbtabela.getValueAt(linha, 5);
            String  status = (String) jTbtabela.getValueAt(linha, 6);
            
            
            tarefa = new Tarefa();
            tarefa.setId(id);
            tarefa.setTarefa(titulo);
            tarefa.setDescricao(descricao);
            tarefa.setDataTarefa(dtTarefa);
            tarefa.setHorainicio(hInicio);
            tarefa.setHoraFim(hFim);
            tarefa.setStatus(status);
           
            jTfId.setText(String.valueOf(id));
            jTFtarefa.setText(titulo);
            jTFdescricao.setText(descricao);
            jDateCData.setDate(ConvesorData.converterLocalDateParaDate(dtTarefa));
            jTFhorainicio.setText(String.valueOf(hInicio));
            jTFHoraFim.setText(String.valueOf(hFim));
            jCBStatusp.setSelectedItem(status);
            //habilitarCampos();
        }
       
    }

    private void excluirTarefa() {
     DAOTarefa dao = new DAOTarefa();
     int linha = jTbtabela.getSelectedRow();
      
        if (linha < 0 ) {
        JOptionPane.showMessageDialog(null, "Um registro deve ser selecionado.", "Error!.", JOptionPane.ERROR_MESSAGE);
            
        } else {
         int id = (int) jTbtabela.getValueAt(linha, 0);             
         
         if  (id != 0) {
             this.tarefa = new Tarefa();
             tarefa.setId(id);
             //tarefa.getId();
             dao.excluirTarefaDAO(tarefa.getId());
              JOptionPane.showMessageDialog(null, "Cadastro excluido com sucesso.", "Cadastro.", JOptionPane.ERROR_MESSAGE);
              atualizarTarefa();
        } 
         else {
              JOptionPane.showMessageDialog(null, "Erro ao excluír registro.", "Error.", JOptionPane.ERROR_MESSAGE);
         }
                 
        }
    }
    
    private void aplicarFormantoDataBR(JTable tabela, int indiceColunaData){
        
        tabela.getColumnModel().getColumn(indiceColunaData).setCellRenderer(new DefaultTableCellRenderer(){
            private final DateTimeFormatter formatoBR = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    
    
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,
    int row, int column){
         if (value instanceof LocalDate) {
             value = ((LocalDate)value).format(formatoBR);
                
            }
        return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                }
    
    
    });
    
    
    
    }

    private void exit() {
        
         ViewTarefas viewTarefas = new ViewTarefas();
      
      this.dispose();
      
      int op = 0;
      if (op == 0) {
          
      viewTarefas.setVisible(true);
      viewTarefas.setLocationRelativeTo(this);
      

    }
    }
    
    private void preencherComboDatas() {
     ArrayList<LocalDate> datas = new DAOTarefa().listarDatasTarefasDAO();
     DateTimeFormatter formatador = DateTimeFormatter.ofPattern("dd/MM/yyyy");
     
        for (LocalDate data : datas) {
            
            jCBDatas.addItem(data.format(formatador));
            
        }
    
    }
   
    
    

    private void PesquisarTarefa() {
         if (jRBPorData.isSelected()) {
            dataPeriodo = "data";
        } else if (jRBPorPeriodo.isSelected()) {
            dataPeriodo = "periodo";
        }
         DateTimeFormatter formatador = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                 DefaultTableModel model = (DefaultTableModel) jTbtabela.getModel();
              model.setRowCount(0);
              
              if (dataPeriodo.equals("data")) {
 
                  //pesquisar por data única
                  String dataSelecionada = (String) jCBDatas.getSelectedItem();
                  if (dataSelecionada != null && !dataSelecionada.isEmpty()) {
                      try {
                          LocalDate dataT = LocalDate.parse(dataSelecionada, formatador);
                          DAOTarefa dao = new DAOTarefa();
                          lista = dao.listarTarefasDataDAO(dataT);
                          
                          for (Tarefa tarefa1 : lista) {
                          model.addRow(new Object []{
                              tarefa1.getId(),
                              tarefa1.getTarefa(),
                              tarefa1.getDescricao(),
                              tarefa1.getDataTarefa(),
                              tarefa1.getHorainicio(),
                              tarefa1.getHoraFim(),
                              tarefa1.getStatus()
                            
                          });
                          
                          
                          
                              
                          }
                          aplicarFormantoDataBR(jTbtabela, 3);
                      } catch (DateTimeException e) {
                          JOptionPane.showMessageDialog(null, "Data Inválida!", "Erro", JOptionPane.ERROR_MESSAGE);
                      }
  
                  } else {  
                      JOptionPane.showMessageDialog(null, "Data inválida!", "Atenção", JOptionPane.WARNING_MESSAGE);
                  }
 
        } else if (dataPeriodo.equals("periodo")){
            //PESQUISA POR PERIODO
            Date inicio = jDCInicio.getDate();
            Date fim = jDCFim.getDate();
            
                  if (inicio != null && fim != null) {
                      LocalDate dataInicio = inicio.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                      LocalDate dataFim = fim.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                      
                      if (dataFim.isBefore(dataInicio)) {
                          JOptionPane.showMessageDialog(null, "A data final não pode ser menor que a data inicial" , "Erro", JOptionPane.ERROR_MESSAGE);
                          return;
                      }
                      DAOTarefa dao = new DAOTarefa();
                      lista = dao.listarTarefasPorIntervalo(dataInicio, dataFim);
                      
                      for (Tarefa t1 : lista) {
                          model.addRow(new Object[]{
                            t1.getId(), 
                            t1.getTarefa(),  
                            t1.getDescricao(),  
                            t1.getDataTarefa(),  
                            t1.getHorainicio(),
                            t1.getHoraFim(),
                            t1.getStatus()
                          
                              
                          });
                          
                      }
                        aplicarFormantoDataBR(jTbtabela, 3);
                  } else{
                  JOptionPane.showMessageDialog(null, "Preencha as duas datas do periodo!", "Aviso", JOptionPane.WARNING_MESSAGE);
                  }
        }
              
             
    }

    private void desabilitarCampos() {
        jTFdescricao.setEnabled(false);
        jTFHoraFim.setEnabled(false);
        jTFhorainicio.setEnabled(false);
        jTFtarefa.setEnabled(false);
        jBtAtualizar.setEnabled(false);
        jCBDatas.setEnabled(false);
        jDateCData.setEnabled(false);
        jCBStatusp.setEnabled(false);
    }

    private void habilitarCampos() {
       jTFdescricao.setEnabled(true);
        jTFHoraFim.setEnabled(true);
        jTFhorainicio.setEnabled(true);
        jTFtarefa.setEnabled(true);
        jBtAtualizar.setEnabled(true);
        jCBDatas.setEnabled(true);
        jDateCData.setEnabled(true);
        jCBStatusp.setEnabled(true);
    }
} 
    


    
    
    
    

